<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bangnongmang.data.dao.PocketMapper">
  <resultMap id="BaseResultMap" type="cn.bangnongmang.data.domain.Pocket">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="curr_money" jdbcType="INTEGER" property="curr_money" />
    <result column="provisions" jdbcType="INTEGER" property="provisions" />
    <result column="arrears" jdbcType="INTEGER" property="arrears" />
    <result column="credit" jdbcType="INTEGER" property="credit" />
    <result column="insurance" jdbcType="INTEGER" property="insurance" />
    <result column="waitting_in" jdbcType="INTEGER" property="waitting_in" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, curr_money, provisions, arrears, credit, insurance, waitting_in
  </sql>
  <select id="selectByExample" parameterType="cn.bangnongmang.data.domain.PocketCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pocket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pocket
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pocket
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bangnongmang.data.domain.PocketCriteria">
    delete from pocket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bangnongmang.data.domain.Pocket">
    insert into pocket (uid, curr_money, provisions, 
      arrears, credit, insurance, 
      waitting_in)
    values (#{uid,jdbcType=BIGINT}, #{curr_money,jdbcType=INTEGER}, #{provisions,jdbcType=INTEGER}, 
      #{arrears,jdbcType=INTEGER}, #{credit,jdbcType=INTEGER}, #{insurance,jdbcType=INTEGER}, 
      #{waitting_in,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.bangnongmang.data.domain.Pocket">
    insert into pocket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="curr_money != null">
        curr_money,
      </if>
      <if test="provisions != null">
        provisions,
      </if>
      <if test="arrears != null">
        arrears,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="insurance != null">
        insurance,
      </if>
      <if test="waitting_in != null">
        waitting_in,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="curr_money != null">
        #{curr_money,jdbcType=INTEGER},
      </if>
      <if test="provisions != null">
        #{provisions,jdbcType=INTEGER},
      </if>
      <if test="arrears != null">
        #{arrears,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="insurance != null">
        #{insurance,jdbcType=INTEGER},
      </if>
      <if test="waitting_in != null">
        #{waitting_in,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bangnongmang.data.domain.PocketCriteria" resultType="java.lang.Long">
    select count(*) from pocket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pocket
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.curr_money != null">
        curr_money = #{record.curr_money,jdbcType=INTEGER},
      </if>
      <if test="record.provisions != null">
        provisions = #{record.provisions,jdbcType=INTEGER},
      </if>
      <if test="record.arrears != null">
        arrears = #{record.arrears,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.insurance != null">
        insurance = #{record.insurance,jdbcType=INTEGER},
      </if>
      <if test="record.waitting_in != null">
        waitting_in = #{record.waitting_in,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pocket
    set uid = #{record.uid,jdbcType=BIGINT},
      curr_money = #{record.curr_money,jdbcType=INTEGER},
      provisions = #{record.provisions,jdbcType=INTEGER},
      arrears = #{record.arrears,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=INTEGER},
      insurance = #{record.insurance,jdbcType=INTEGER},
      waitting_in = #{record.waitting_in,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bangnongmang.data.domain.Pocket">
    update pocket
    <set>
      <if test="curr_money != null">
        curr_money = #{curr_money,jdbcType=INTEGER},
      </if>
      <if test="provisions != null">
        provisions = #{provisions,jdbcType=INTEGER},
      </if>
      <if test="arrears != null">
        arrears = #{arrears,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="insurance != null">
        insurance = #{insurance,jdbcType=INTEGER},
      </if>
      <if test="waitting_in != null">
        waitting_in = #{waitting_in,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bangnongmang.data.domain.Pocket">
    update pocket
    set curr_money = #{curr_money,jdbcType=INTEGER},
      provisions = #{provisions,jdbcType=INTEGER},
      arrears = #{arrears,jdbcType=INTEGER},
      credit = #{credit,jdbcType=INTEGER},
      insurance = #{insurance,jdbcType=INTEGER},
      waitting_in = #{waitting_in,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>