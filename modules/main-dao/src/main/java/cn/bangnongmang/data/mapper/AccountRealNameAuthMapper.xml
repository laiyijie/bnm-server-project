<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bangnongmang.data.dao.AccountRealNameAuthMapper">
  <resultMap id="BaseResultMap" type="cn.bangnongmang.data.domain.AccountRealNameAuth">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="update_time" jdbcType="BIGINT" property="update_time" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="id_card_number" jdbcType="VARCHAR" property="id_card_number" />
    <result column="real_name" jdbcType="VARCHAR" property="real_name" />
    <result column="failed_reason" jdbcType="VARCHAR" property="failed_reason" />
    <result column="down_side" jdbcType="VARCHAR" property="down_side" />
    <result column="up_side" jdbcType="VARCHAR" property="up_side" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, update_time, state, id_card_number, real_name, failed_reason, down_side, up_side
  </sql>
  <select id="selectByExample" parameterType="cn.bangnongmang.data.domain.AccountRealNameAuthCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_real_name_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_real_name_auth
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account_real_name_auth
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bangnongmang.data.domain.AccountRealNameAuthCriteria">
    delete from account_real_name_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bangnongmang.data.domain.AccountRealNameAuth">
    insert into account_real_name_auth (uid, update_time, state, 
      id_card_number, real_name, failed_reason, 
      down_side, up_side)
    values (#{uid,jdbcType=BIGINT}, #{update_time,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, 
      #{id_card_number,jdbcType=VARCHAR}, #{real_name,jdbcType=VARCHAR}, #{failed_reason,jdbcType=VARCHAR}, 
      #{down_side,jdbcType=VARCHAR}, #{up_side,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bangnongmang.data.domain.AccountRealNameAuth">
    insert into account_real_name_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="id_card_number != null">
        id_card_number,
      </if>
      <if test="real_name != null">
        real_name,
      </if>
      <if test="failed_reason != null">
        failed_reason,
      </if>
      <if test="down_side != null">
        down_side,
      </if>
      <if test="up_side != null">
        up_side,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="id_card_number != null">
        #{id_card_number,jdbcType=VARCHAR},
      </if>
      <if test="real_name != null">
        #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="failed_reason != null">
        #{failed_reason,jdbcType=VARCHAR},
      </if>
      <if test="down_side != null">
        #{down_side,jdbcType=VARCHAR},
      </if>
      <if test="up_side != null">
        #{up_side,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bangnongmang.data.domain.AccountRealNameAuthCriteria" resultType="java.lang.Long">
    select count(*) from account_real_name_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_real_name_auth
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.id_card_number != null">
        id_card_number = #{record.id_card_number,jdbcType=VARCHAR},
      </if>
      <if test="record.real_name != null">
        real_name = #{record.real_name,jdbcType=VARCHAR},
      </if>
      <if test="record.failed_reason != null">
        failed_reason = #{record.failed_reason,jdbcType=VARCHAR},
      </if>
      <if test="record.down_side != null">
        down_side = #{record.down_side,jdbcType=VARCHAR},
      </if>
      <if test="record.up_side != null">
        up_side = #{record.up_side,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_real_name_auth
    set uid = #{record.uid,jdbcType=BIGINT},
      update_time = #{record.update_time,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER},
      id_card_number = #{record.id_card_number,jdbcType=VARCHAR},
      real_name = #{record.real_name,jdbcType=VARCHAR},
      failed_reason = #{record.failed_reason,jdbcType=VARCHAR},
      down_side = #{record.down_side,jdbcType=VARCHAR},
      up_side = #{record.up_side,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bangnongmang.data.domain.AccountRealNameAuth">
    update account_real_name_auth
    <set>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="id_card_number != null">
        id_card_number = #{id_card_number,jdbcType=VARCHAR},
      </if>
      <if test="real_name != null">
        real_name = #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="failed_reason != null">
        failed_reason = #{failed_reason,jdbcType=VARCHAR},
      </if>
      <if test="down_side != null">
        down_side = #{down_side,jdbcType=VARCHAR},
      </if>
      <if test="up_side != null">
        up_side = #{up_side,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bangnongmang.data.domain.AccountRealNameAuth">
    update account_real_name_auth
    set update_time = #{update_time,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      id_card_number = #{id_card_number,jdbcType=VARCHAR},
      real_name = #{real_name,jdbcType=VARCHAR},
      failed_reason = #{failed_reason,jdbcType=VARCHAR},
      down_side = #{down_side,jdbcType=VARCHAR},
      up_side = #{up_side,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>