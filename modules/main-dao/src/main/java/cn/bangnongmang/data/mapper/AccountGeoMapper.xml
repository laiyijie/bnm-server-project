<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bangnongmang.data.dao.AccountGeoMapper">
  <resultMap id="BaseResultMap" type="cn.bangnongmang.data.domain.AccountGeo">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="street" jdbcType="VARCHAR" property="street" />
    <result column="street_number" jdbcType="VARCHAR" property="street_number" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="update_time" jdbcType="BIGINT" property="update_time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, latitude, longitude, province, city, district, street, street_number, address, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="cn.bangnongmang.data.domain.AccountGeoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_geo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_geo
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account_geo
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bangnongmang.data.domain.AccountGeoCriteria">
    delete from account_geo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bangnongmang.data.domain.AccountGeo">
    insert into account_geo (uid, latitude, longitude, 
      province, city, district, 
      street, street_number, address, 
      update_time)
    values (#{uid,jdbcType=BIGINT}, #{latitude,jdbcType=DOUBLE}, #{longitude,jdbcType=DOUBLE}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, 
      #{street,jdbcType=VARCHAR}, #{street_number,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{update_time,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.bangnongmang.data.domain.AccountGeo">
    insert into account_geo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="street != null">
        street,
      </if>
      <if test="street_number != null">
        street_number,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        #{street,jdbcType=VARCHAR},
      </if>
      <if test="street_number != null">
        #{street_number,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bangnongmang.data.domain.AccountGeoCriteria" resultType="java.lang.Long">
    select count(*) from account_geo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_geo
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.district != null">
        district = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.street != null">
        street = #{record.street,jdbcType=VARCHAR},
      </if>
      <if test="record.street_number != null">
        street_number = #{record.street_number,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_geo
    set uid = #{record.uid,jdbcType=BIGINT},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      street = #{record.street,jdbcType=VARCHAR},
      street_number = #{record.street_number,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      update_time = #{record.update_time,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bangnongmang.data.domain.AccountGeo">
    update account_geo
    <set>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        street = #{street,jdbcType=VARCHAR},
      </if>
      <if test="street_number != null">
        street_number = #{street_number,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=BIGINT},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bangnongmang.data.domain.AccountGeo">
    update account_geo
    set latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      street = #{street,jdbcType=VARCHAR},
      street_number = #{street_number,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      update_time = #{update_time,jdbcType=BIGINT}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>