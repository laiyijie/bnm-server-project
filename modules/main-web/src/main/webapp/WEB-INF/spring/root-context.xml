<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->
    <!-- jdbc data source -->
    <context:component-scan base-package="cn.bangnongmang.server">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan base-package="cn.bangnongmang.service">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:property-placeholder
            location="file:#{systemEnvironment['BNM_CONFIG']}/config.properties"/>

    <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate"
          p:dataSource-ref="mysqlDataSource"
          p:locations="classpath:db_bnm_main/migration"/>

    <!-- jms and client -->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"
          p:userName="${notify.jms.username}" p:password="${notify.jms.password}">
        <property name="brokerURL" value="tcp://bangnongmang.cn:61616"/>
    </bean>
    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory" ref="targetConnectionFactory"/>
        <property name="maxConnections" value="10"/>
    </bean>

    <bean id="connectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
    </bean>
    <bean id="notifyClient" class="cn.bangnongmang.notify.client.DefaultNotifyClient">
        <constructor-arg name="connectionFactory" ref="connectionFactory"/>
        <constructor-arg name="queuePrefix" value="${notify.jms.destination}"/>
    </bean>
    <!-- jms and client -->

    <bean id="mysqlDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close" p:driverClassName="${jdbc.driverClass}" p:url="${jdbc.url}"
          p:username="${jdbc.username}" p:password="${jdbc.password}"
          p:testWhileIdle="true" p:testOnBorrow="false" p:validationQuery="SELECT 1"
          p:timeBetweenEvictionRunsMillis="7200000" p:numTestsPerEvictionRun="50"/>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="mysqlDataSource"/>

    <tx:annotation-driven proxy-target-class="true"/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="mysqlDataSource" depends-on="flyway">
        <property name="mapperLocations">
            <list>
                <value>classpath:cn/bangnongmang/data/mapper/*.xml</value>
                <value>classpath:cn/bangnongmang/data/combo/mapper/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            helperDialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>


    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:sqlSessionFactoryBeanName="sqlSessionFactory" p:basePackage="cn.bangnongmang.data"/>


    <bean id="rxBankAuth" class="cn.bangnongmang.service.outerservice.impl.RxBankAuth"
          p:selfPrivateKeyPath="file:#{systemEnvironment['BNM_CONFIG']}/merchant_pri.key"
          p:serverPublicKeyPath="file:#{systemEnvironment['BNM_CONFIG']}/rxrc5_pub.key"
          p:serverUrl="${rx.serverUrl}" p:funcNo="${rx.funcNo}" p:orgNo="${rx.orgNo}"
          p:prodNo="${rx.prodNo}" p:version="${rx.version}" p:liveMode="${rx.liveMode}"/>


    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean id="jsonMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

    <task:annotation-driven executor="myExecutor"
                            scheduler="myScheduler"/>
    <task:executor id="myExecutor" pool-size="5-25"
                   queue-capacity="200"/>
    <task:scheduler id="myScheduler" pool-size="10"/>

    <bean id="stateCollection"
          class="cn.bangnongmang.service.middle.order.farmer.OrderFarmerStateCollection">
    </bean>

    <bean
            class="cn.bangnongmang.service.middle.order.farmer.OrderFarmerStateManagerFactory">
        <constructor-arg name="collection" ref="stateCollection"/>
    </bean>

    <context:annotation-config/>
    <bean
            class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration"/>
    <bean
            class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory"
            p:hostName="${session.redis.hostName}" p:port="${session.redis.port}" p:database="${session.redis.database}"
            p:password="${session.redis.password}"/>
</beans>
