<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bangnongmang.admin.data.dao.OfflineChargeMapper">
  <resultMap id="BaseResultMap" type="cn.bangnongmang.admin.data.domain.OfflineCharge">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="requester" jdbcType="VARCHAR" property="requester" />
    <result column="responser" jdbcType="VARCHAR" property="responser" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="target" jdbcType="VARCHAR" property="target" />
    <result column="request_time" jdbcType="BIGINT" property="request_time" />
    <result column="response_time" jdbcType="BIGINT" property="response_time" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="ps" jdbcType="VARCHAR" property="ps" />
    <result column="image" jdbcType="VARCHAR" property="image" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, requester, responser, num, target, request_time, response_time, state, ps, image
  </sql>
  <select id="selectByExample" parameterType="cn.bangnongmang.admin.data.domain.OfflineChargeCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from offline_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from offline_charge
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from offline_charge
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bangnongmang.admin.data.domain.OfflineChargeCriteria">
    delete from offline_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bangnongmang.admin.data.domain.OfflineCharge">
    insert into offline_charge (id, requester, responser, 
      num, target, request_time, 
      response_time, state, ps, 
      image)
    values (#{id,jdbcType=VARCHAR}, #{requester,jdbcType=VARCHAR}, #{responser,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{target,jdbcType=VARCHAR}, #{request_time,jdbcType=BIGINT}, 
      #{response_time,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{ps,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bangnongmang.admin.data.domain.OfflineCharge">
    insert into offline_charge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="requester != null">
        requester,
      </if>
      <if test="responser != null">
        responser,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="target != null">
        target,
      </if>
      <if test="request_time != null">
        request_time,
      </if>
      <if test="response_time != null">
        response_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="ps != null">
        ps,
      </if>
      <if test="image != null">
        image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="requester != null">
        #{requester,jdbcType=VARCHAR},
      </if>
      <if test="responser != null">
        #{responser,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="target != null">
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="request_time != null">
        #{request_time,jdbcType=BIGINT},
      </if>
      <if test="response_time != null">
        #{response_time,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="ps != null">
        #{ps,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bangnongmang.admin.data.domain.OfflineChargeCriteria" resultType="java.lang.Long">
    select count(*) from offline_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update offline_charge
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.requester != null">
        requester = #{record.requester,jdbcType=VARCHAR},
      </if>
      <if test="record.responser != null">
        responser = #{record.responser,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.target != null">
        target = #{record.target,jdbcType=VARCHAR},
      </if>
      <if test="record.request_time != null">
        request_time = #{record.request_time,jdbcType=BIGINT},
      </if>
      <if test="record.response_time != null">
        response_time = #{record.response_time,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.ps != null">
        ps = #{record.ps,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update offline_charge
    set id = #{record.id,jdbcType=VARCHAR},
      requester = #{record.requester,jdbcType=VARCHAR},
      responser = #{record.responser,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      target = #{record.target,jdbcType=VARCHAR},
      request_time = #{record.request_time,jdbcType=BIGINT},
      response_time = #{record.response_time,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER},
      ps = #{record.ps,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bangnongmang.admin.data.domain.OfflineCharge">
    update offline_charge
    <set>
      <if test="requester != null">
        requester = #{requester,jdbcType=VARCHAR},
      </if>
      <if test="responser != null">
        responser = #{responser,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="target != null">
        target = #{target,jdbcType=VARCHAR},
      </if>
      <if test="request_time != null">
        request_time = #{request_time,jdbcType=BIGINT},
      </if>
      <if test="response_time != null">
        response_time = #{response_time,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="ps != null">
        ps = #{ps,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bangnongmang.admin.data.domain.OfflineCharge">
    update offline_charge
    set requester = #{requester,jdbcType=VARCHAR},
      responser = #{responser,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      target = #{target,jdbcType=VARCHAR},
      request_time = #{request_time,jdbcType=BIGINT},
      response_time = #{response_time,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      ps = #{ps,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>